#!/usr/bin/env zsh

alias t='todo.sh -d ~/.todo.cfg'
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

eval "$(hub alias -s)"
eval "$(thefuck --alias)"

export GOPATH="$HOME/Documents/Programming/go"

export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
export PATH="$HOME/bin:$GOPATH/bin:$PATH"

function anybar () {
    echo -n $1 | nc -4u -w0 localhost ${2:-1738};
}

function pushguard() {
    local app_token="${APP_TOKEN:?Need to set APP_TOKEN non-empty}"
    local user_key="${USER_KEY:?Need to set USER_KEY non-empty}"

    "$@"
    ret=$?

    if [[ ret -eq 0 ]]; then
            message="Finished: Success."
    else
            message="Finished: Failure."
    fi

    curl --silent --fail \
            --form-string "token=$app_token" \
            --form-string "user=$user_key" \
            --form-string "message=$message" \
            https://api.pushover.net/1/messages.json > /dev/null
}

function anyguard () {
    ANYBAR_PORT=`jot -r 1 1700 1900`
    ANYBAR_PORT=$ANYBAR_PORT open -n ~/Applications/AnyBar.app
    sleep 0.5
    anybar orange $ANYBAR_PORT
    "$@"
    ret=$?

    if [[ ret -eq 0 ]]; then
        anybar green $ANYBAR_PORT
    else
        anybar red $ANYBAR_PORT
    fi
    echo "Finished. Press [ENTER] to exit."
    read ENTER
    anybar quit $ANYBAR_PORT
    return $ret
}

function sayguard () {
    "$@"
    ret=$?

    if [[ ret -eq 0 ]]; then
        say "Finished success."
    else
        say "Fished fail."
    fi

    return $ret
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
